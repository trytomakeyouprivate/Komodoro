#!/bin/bash

printf """
----------------------------------------------------------------------------------------------

Komodoro: A KDE-native unskippable anti-PC-Addiction timer.

This script will install a systemd service and timer
that locks the screen every 30 minutes until you did a pause.

----------------------------------------------------------------------------------------------

"""

read -p "Do you want to proceed? (y/n) " answer

if [[ $answer == "y" || $answer == "Y" ]]; then
    # Create komodoro script
    cat > ~/.local/share/kservices5/komodoro << EOF
#!/bin/bash

# Lock the screen
loginctl lock-session

# fallback if command didnt work
if [ $? -ne 0 ]; then
    qdbus org.kde.screensaver /ScreenSaver Lock
fi


# Show a notification with countdown time ------------------------------
notify-send -t 6000 "Screen locked" "Take a break for 5 minutes"
sleep 60 # Wait for 1 minute
notify-send -t 6000 "Screen locked" "Take a break for 4 minutes"
sleep 60 # Wait for 1 minute
notify-send -t 6000 "Screen locked" "Take a break for 3 minutes"
sleep 60 # Wait for 1 minute
notify-send -t 6000 "Screen locked" "Take a break for 2 minutes"
sleep 60 # Wait for 1 minute
notify-send -t 6000 "Screen locked" "Take a break for 1 minute"
sleep 60 # Wait for 1 minute
EOF

chmod +x ~/.local/share/kservices5/komodoro

# Create komodoro.service -------------------------------------------
    cat > ~/.config/systemd/user/komodoro.service << EOF
[Unit]
Description=Lock screen after 30 minutes of usage

[Service]
Type=simple
ExecStart=/bin/bash ~/.local/share/kservices5/komodoro

[Install]
WantedBy=default.target
EOF

# Create komodoro.timer ------------------------------------
    cat > ~/.config/systemd/user/komodoro.timer << EOF
[Unit]
Description=Lock screen every 30 minutes

[Timer]
OnBootSec=30min
OnUnitActiveSec=30min
Unit=komodoro.service

[Install]
WantedBy=timers.target
EOF


# Create komodoro-stop script -------------------------------

    cat > ~/.local/share/kservices5/komodoro-pause << EOF
#!/bin/bash

# This script gets launched by the Appstarter and stops the screensaving service for


# Subtract 30 minutes from inputted timespan, or set it 0 (because the service waits 30min before stopping)

if [[ $duration -ge 30 ]]; then
    new_duration=$((duration - 30))
else
    duration=0
fi



# Convert the duration to seconds
duration=$((duration * 60))


# Pause the komodoro service

systemctl --user stop komodoro.timer



# Wait for the specified duration
sleep $duration



# Resume the komodoro service

systemctl --user start komodoro.timer

EOF

# Create an Appstarter asking for input for stopping --------------------------------

    cat > ~/.local/share/applications/pause-komodoro.desktop << EOF
[Desktop Entry]
Type=Application
Name=Pause Komodoro
Comment=Pause the Komodoro screenlocking timer
Exec=bash -c 'duration=$(kdialog --title "Pause Screensaver" --inputbox "For how long do you want to pause the screensaver service? (in minutes):"); /bin/bash ~/.local/share/kservices5/komodoro-pause $duration'
Icon=rotation-locked-landscape-symbolic
Terminal=false
Categories=System;
EOF

    # Enable and start the timer
    systemctl --user enable komodoro.timer
    systemctl --user start komodoro.timer

    echo "Service and timer installed successfully. Make a break in 30min."
else
    echo "Service installation canceled."
fi
